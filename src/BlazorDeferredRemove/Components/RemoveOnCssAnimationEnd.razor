@inject IJSRuntime JsRuntime;

@if (!IsCompleted)
{
    <CallbackOnCssAnimationEnd CssAnimationName="@CssAnimationName" OnCssAnimationCompleted="OnCompleted">
        @ChildContent
    </CallbackOnCssAnimationEnd>   
}

@code{  

    public bool IsCompleted { get; set; } = true;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// A callback that will be invoked whenever a CSS animation completes against this components child content.
    /// The callback will only be invoked if the animation name that has completed, matches <see cref="CssAnimationName"/> parameter, OR when
    /// <see cref="CssAnimationName"/> is null (in which case the callback is invoked for any css animation that completed).
    /// The callback paramater is the name of the css animation that completed.
    /// </summary>
    [Parameter]
    public EventCallback<string> OnCssAnimationCompleted { get; set; }

    [Parameter]
    public string CssAnimationName { get; set; }

    public async Task OnCompleted(string animationName)
    {
        IsCompleted = true;
        await OnCssAnimationCompleted.InvokeAsync(animationName);
    }
}